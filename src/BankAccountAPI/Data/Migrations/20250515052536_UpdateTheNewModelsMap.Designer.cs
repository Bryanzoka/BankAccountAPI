// <auto-generated />
using System;
using BankAccountAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankAccountAPI.Migrations
{
    [DbContext(typeof(BankAccountDBContext))]
    [Migration("20250515052536_UpdateTheNewModelsMap")]
    partial class UpdateTheNewModelsMap
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BankAccountAPI.Models.BankAccountModel", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<int>("AccountType")
                        .HasColumnType("int")
                        .HasColumnName("account_type");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("account_balance");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR(11)")
                        .HasColumnName("account_cpf");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("LastTransactionAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_transaction_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("AccountId");

                    b.HasIndex("CPF");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("BankAccountAPI.Models.BankClientModel", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("VARCHAR(11)")
                        .HasColumnName("client_cpf");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("client_email");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("client_name");

                    b.Property<string>("ClientTel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("client_tel");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("client_password");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("CPF");

                    b.ToTable("BankClient");
                });

            modelBuilder.Entity("BankAccountAPI.Models.BankAccountModel", b =>
                {
                    b.HasOne("BankAccountAPI.Models.BankClientModel", "BankClient")
                        .WithMany()
                        .HasForeignKey("CPF")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BankClient");
                });
#pragma warning restore 612, 618
        }
    }
}
